{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Thomas\\\\Desktop\\\\Apex - FrontEnd\\\\ReactJS\\\\Exercicios\\\\D\\\\crud-cadastro\\\\src\\\\index.js\";\n// Importações\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './bootstrap/bootstrap.min.css';\nimport './estilos.css'; // Classe\n\nclass Projeto extends React.Component {\n  // Construtor\n  constructor() {\n    super();\n\n    this.teclado = campo => {\n      let nome_campo = campo.target.name;\n      let valor_campo = campo.target.value;\n      this.setState({\n        [nome_campo]: valor_campo\n      });\n    };\n\n    this.cadastrar = e => {\n      // Não permite o refresh\n      e.preventDefault(); // Validar campos\n\n      if (this.state.nome === \"\" || this.state.valor === \"\") {\n        alert(\"Favor preencher os campos\");\n      } else if (isNaN(this.state.valor)) {\n        alert(\"Favor informar um valor válido\");\n      } else {\n        // Criar um objeto\n        let objCurso = {\n          nome: this.state.nome,\n          valor: this.state.valor\n        }; // Copiar o JSON\n\n        let copiaDados = this.state.dados; // Adicinar o novo objeto\n\n        copiaDados.push(objCurso); // Atribuir o JSON ao state dados\n\n        this.setState({\n          dados: copiaDados\n        }); // Limpar campos\n\n        this.setState({\n          nome: \"\"\n        });\n        this.setState({\n          valor: \"\"\n        });\n      }\n    };\n\n    this.selecionar = e => {\n      // Obter o índice\n      this.setState({\n        codigo: e.target.value\n      }); // Exibir nome do curso e valor\n\n      this.setState({\n        nome: this.state.dados[e.target.value].nome\n      });\n      this.setState({\n        valor: this.state.dados[e.target.value].valor\n      }); // Alterar botões\n\n      this.setState({\n        btnCadastro: false\n      });\n    };\n\n    this.excluir = () => {\n      // Copiar JSON\n      let copiaDados = this.state.dados; // Remover o curso\n\n      copiaDados.splice(this.state.codigo, 1); // Atualizar o JSON de dados\n\n      this.setState({\n        dados: copiaDados\n      }); // Alterar botões\n\n      this.setState({\n        btnCadastro: true\n      }); // Limpar campos\n\n      this.setState({\n        nome: \"\"\n      });\n      this.setState({\n        valor: \"\"\n      });\n    };\n\n    this.alterar = () => {\n      // Criar um objeto\n      let objCurso = {\n        nome: this.state.nome,\n        valor: this.state.valor\n      }; // Copiar o JSON\n\n      let copiaDados = this.state.dados; // Alterar o curso\n\n      copiaDados[this.state.codigo] = objCurso; // Atribuir o JSON ao state dados\n\n      this.setState({\n        dados: copiaDados\n      }); // Alterar botões\n\n      this.setState({\n        btnCadastro: true\n      }); // Limpar campos\n\n      this.setState({\n        nome: \"\"\n      });\n      this.setState({\n        valor: \"\"\n      });\n    };\n\n    this.state = {\n      codigo: null,\n      nome: '',\n      valor: '',\n      dados: [],\n      btnCadastro: true\n    };\n  } // Evento de teclado\n\n\n  // Render\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.cadastrar,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: this.state.nome,\n          name: \"nome\",\n          onChange: this.teclado,\n          placeholder: \"Nome\",\n          className: \"form-control\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: this.state.valor,\n          name: \"valor\",\n          onChange: this.teclado,\n          placeholder: \"Valor\",\n          className: \"form-control\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 21\n        }, this), this.state.btnCadastro ? /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          className: \"btn btn-primary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 21\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"button\",\n            value: \"Alterar\",\n            onClick: this.alterar,\n            className: \"btn btn-warning\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"button\",\n            value: \"Excluir\",\n            onClick: this.excluir,\n            className: \"btn btn-danger\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"C\\xF3digo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Nome\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Valor\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Selecionar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: this.state.dados.map((d, indice) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: indice + 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: d.nome\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: d.valor\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-success\",\n                value: indice,\n                onClick: this.selecionar,\n                children: \"Selecionar\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 33\n            }, this)]\n          }, indice, true, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }, this);\n  }\n\n} // Enviar projeto para o HTML\n\n\nReactDOM.render( /*#__PURE__*/_jsxDEV(Projeto, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 165,\n  columnNumber: 17\n}, this), document.getElementById(\"root\"));","map":{"version":3,"sources":["C:/Users/Thomas/Desktop/Apex - FrontEnd/ReactJS/Exercicios/D/crud-cadastro/src/index.js"],"names":["React","ReactDOM","Projeto","Component","constructor","teclado","campo","nome_campo","target","name","valor_campo","value","setState","cadastrar","e","preventDefault","state","nome","valor","alert","isNaN","objCurso","copiaDados","dados","push","selecionar","codigo","btnCadastro","excluir","splice","alterar","render","map","d","indice","document","getElementById"],"mappings":"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","sourcesContent":["// Importações\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './bootstrap/bootstrap.min.css';\nimport './estilos.css';\n\n// Classe\nclass Projeto extends React.Component{\n\n    // Construtor\n    constructor(){\n        super();\n\n        this.state = {\n            codigo:null,\n            nome:'',\n            valor:'',\n            dados:[],\n            btnCadastro:true\n        }\n    }\n\n    // Evento de teclado\n    teclado = (campo) => {\n        let nome_campo = campo.target.name;\n        let valor_campo = campo.target.value;\n        this.setState({[nome_campo]:valor_campo});\n    }\n\n    // Evento de cadastro\n    cadastrar = (e) => {\n        // Não permite o refresh\n        e.preventDefault();\n\n        // Validar campos\n        if(this.state.nome === \"\" || this.state.valor === \"\"){\n            alert(\"Favor preencher os campos\");\n        }else if(isNaN(this.state.valor)){\n            alert(\"Favor informar um valor válido\")\n        }else{\n            // Criar um objeto\n            let objCurso = {nome:this.state.nome, valor:this.state.valor};\n\n            // Copiar o JSON\n            let copiaDados = this.state.dados;\n\n            // Adicinar o novo objeto\n            copiaDados.push(objCurso);\n\n            // Atribuir o JSON ao state dados\n            this.setState({dados:copiaDados});\n\n            // Limpar campos\n            this.setState({nome:\"\"});\n            this.setState({valor:\"\"});\n        }\n    }\n\n    // Evento de seleção\n    selecionar = (e) => {\n\n        // Obter o índice\n        this.setState({codigo:e.target.value});\n\n        // Exibir nome do curso e valor\n        this.setState({nome : this.state.dados[e.target.value].nome});\n        this.setState({valor : this.state.dados[e.target.value].valor});\n\n        // Alterar botões\n        this.setState({btnCadastro : false});\n\n    }\n\n    // Evento de exclusão\n    excluir = () => {\n\n        // Copiar JSON\n        let copiaDados = this.state.dados;\n\n        // Remover o curso\n        copiaDados.splice(this.state.codigo, 1);\n\n        // Atualizar o JSON de dados\n        this.setState({dados : copiaDados});\n\n        // Alterar botões\n        this.setState({btnCadastro : true});\n        \n        // Limpar campos\n        this.setState({nome:\"\"});\n        this.setState({valor:\"\"});\n\n    }\n\n    // Evento para alterar\n    alterar = () => {\n\n        // Criar um objeto\n        let objCurso = {nome:this.state.nome, valor:this.state.valor};\n\n        // Copiar o JSON\n        let copiaDados = this.state.dados;\n\n        // Alterar o curso\n        copiaDados[this.state.codigo] = objCurso;\n\n        // Atribuir o JSON ao state dados\n        this.setState({dados:copiaDados});\n\n        // Alterar botões\n        this.setState({btnCadastro : true});\n\n        // Limpar campos\n        this.setState({nome:\"\"});\n        this.setState({valor:\"\"});   \n\n    }\n\n    // Render\n    render(){\n        return(\n            <main>\n                <form onSubmit={this.cadastrar}>\n                    <input type=\"text\" value={this.state.nome} name=\"nome\" onChange={this.teclado} placeholder=\"Nome\" className=\"form-control\"/>\n                    <input type=\"text\" value={this.state.valor} name=\"valor\" onChange={this.teclado} placeholder=\"Valor\" className=\"form-control\"/>\n                    \n                    {this.state.btnCadastro ?\n                    <input type=\"submit\" className=\"btn btn-primary\" />\n                    :\n                    <div>\n                        <input type=\"button\" value=\"Alterar\" onClick={this.alterar} className=\"btn btn-warning\" />\n                        <input type=\"button\" value=\"Excluir\" onClick={this.excluir} className=\"btn btn-danger\" />\n                    </div>\n                    }\n                </form>\n\n                <table className=\"table\">\n                    <thead>\n                        <tr>\n                            <th>Código</th>\n                            <th>Nome</th>\n                            <th>Valor</th>\n                            <th>Selecionar</th>\n                        </tr>\n                    </thead>\n\n                    <tbody>\n                        {this.state.dados.map((d, indice) => (\n                            <tr key={indice}>\n                                <td>{indice+1}</td>\n                                <td>{d.nome}</td>\n                                <td>{d.valor}</td>\n                                <td><button className=\"btn btn-success\" value={indice} onClick={this.selecionar}>Selecionar</button></td>\n                            </tr>\n                        ))}\n                    </tbody>\n                </table>\n            </main>\n        );\n    }\n\n}\n\n// Enviar projeto para o HTML\nReactDOM.render(<Projeto />, document.getElementById(\"root\"));"]},"metadata":{},"sourceType":"module"}